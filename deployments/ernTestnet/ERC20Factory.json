{
  "address": "0x17b363567A5Dc4B80AbcDe629AcEe3757Cdc3f75",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "ticker",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "TokenCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ticker",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_mintable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_burnable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ticker",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "mintable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "burnable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "internalType": "struct ERC20Factory.TokenInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ticker",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "mintable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "burnable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcf30346f3cac0751122a04fca59fe576ef4399a552de0eec3664c6264e2f5965",
  "receipt": {
    "to": null,
    "from": "0xA15c6c914681C2b4bd5464526cc377C4c3ab2E39",
    "contractAddress": "0x17b363567A5Dc4B80AbcDe629AcEe3757Cdc3f75",
    "transactionIndex": 1,
    "gasUsed": "3650765",
    "logsBloom": "0x
    "blockHash": "0x1e0044be6ed1c7b253accef860a1fc0e363b0d4ebc4de6952030b9e5f353c77f",
    "transactionHash": "0xcf30346f3cac0751122a04fca59fe576ef4399a552de0eec3664c6264e2f5965",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 6134261,
        "transactionHash": "0xcf30346f3cac0751122a04fca59fe576ef4399a552de0eec3664c6264e2f5965",
        "address": "0x17b363567A5Dc4B80AbcDe629AcEe3757Cdc3f75",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a15c6c914681c2b4bd5464526cc377c4c3ab2e39"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x1e0044be6ed1c7b253accef860a1fc0e363b0d4ebc4de6952030b9e5f353c77f"
      }
    ],
    "blockNumber": 6134261,
    "cumulativeGasUsed": "3694619",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "aee7cc6357b32186d84448466a61c096",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ticker\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_mintable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_burnable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"burnable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct ERC20Factory.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"burnable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Factory.sol\":\"ERC20Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys a `value` amount of tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 value) public virtual {\\n        _burn(_msgSender(), value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\\n     * the caller's allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `value`.\\n     */\\n    function burnFrom(address account, uint256 value) public virtual {\\n        _spendAllowance(account, _msgSender(), value);\\n        _burn(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Pausable} from \\\"../../../utils/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_update}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"contracts/ERC20Base.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Base is ERC20, ERC20Pausable, Ownable {\\n    \\n    constructor(\\n        string memory _name,\\n        string memory _symbol,  // Ticker is referred to as symbol\\n        uint256 _initialSupply,\\n        address _creator\\n    )\\n        ERC20(_name, _symbol)\\n        Ownable(_creator)\\n    {\\n        \\n        _mint(_creator, _initialSupply);\\n    }\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    // The following functions are overrides required by Solidity.\\n\\n    function _update(address from, address to, uint256 value)\\n        internal\\n        override(ERC20, ERC20Pausable)\\n    {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0x7f564c51c379142f6269214b132377d7eff4697a7ffae402bc4d6263b0ac0081\",\"license\":\"MIT\"},\"contracts/ERC20BurnableMintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20BurnableMintable is ERC20, ERC20Burnable, ERC20Pausable, Ownable {\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,  // Ticker is referred to as symbol\\n        uint256 _initialSupply,\\n        address _creator\\n    )\\n        ERC20(_name, _symbol)\\n        Ownable(_creator)\\n    {\\n        _mint(_creator, _initialSupply);\\n    }\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function mint(address to, uint256 amount) public onlyOwner {\\n        _mint(to, amount);\\n    }\\n\\n    // The following functions are overrides required by Solidity.\\n\\n    function _update(address from, address to, uint256 value)\\n        internal\\n        override(ERC20, ERC20Pausable)\\n    {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0x40fb9a6f962bc3ea6332980551e7f9fe87c5bff4fb0f557674e3cbb461ea005b\",\"license\":\"MIT\"},\"contracts/ERC20Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC20Base.sol\\\";\\nimport \\\"./ERC20Mintable.sol\\\";\\nimport \\\"./ERC20BurnableMintable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Factory is Ownable {\\n    struct TokenInfo {\\n        string name;\\n        string ticker;\\n        uint256 totalSupply;\\n        bool mintable;\\n        bool burnable;\\n        address tokenAddress;\\n        address creator;\\n    }\\n\\n    event TokenCreated(\\n        address indexed tokenAddress,\\n        string name,\\n        string ticker,\\n        uint256 totalSupply,\\n        address indexed creator\\n    );\\n\\n    constructor() Ownable(msg.sender) {}\\n\\n    // Mapping to keep track of token names and tickers (symbols)\\n    mapping(string => bool) private nameExists;\\n    mapping(string => bool) private tickerExists;\\n\\n    mapping(address => TokenInfo) public tokens;\\n    address[] public tokenList;\\n\\n    modifier isUnique(string memory name, string memory ticker) {\\n        require(!nameExists[name], \\\"Token name already exists\\\");\\n        require(!tickerExists[ticker], \\\"Token ticker already exists\\\");\\n        _;\\n    }\\n\\n    function createToken(\\n        string memory _name,\\n        string memory _ticker,\\n        uint256 _totalSupply,\\n        bool _mintable,\\n        bool _burnable,\\n        address _creator\\n    ) public onlyOwner isUnique(_name, _ticker) returns (address) {\\n        address tokenAddress;\\n\\n        if (_mintable && _burnable) {\\n            ERC20BurnableMintable token = new ERC20BurnableMintable(_name, _ticker, _totalSupply, _creator);\\n            tokenAddress = address(token);\\n        } else if (_mintable) {\\n            ERC20Mintable token = new ERC20Mintable(_name, _ticker, _totalSupply, _creator);\\n            tokenAddress = address(token);\\n        } else {\\n            ERC20Base token = new ERC20Base(_name, _ticker, _totalSupply, _creator);\\n            tokenAddress = address(token);\\n        }\\n\\n        TokenInfo memory newToken = TokenInfo({\\n            name: _name,\\n            ticker: _ticker,\\n            totalSupply: _totalSupply,\\n            mintable: _mintable,\\n            burnable: _burnable,\\n            tokenAddress: tokenAddress,\\n            creator: _creator\\n        });\\n\\n        tokens[tokenAddress] = newToken;\\n        tokenList.push(tokenAddress);\\n\\n        // Mark the token name and ticker as used\\n        nameExists[_name] = true;\\n        tickerExists[_ticker] = true;\\n\\n        emit TokenCreated(tokenAddress, _name, _ticker, _totalSupply, _creator);\\n\\n        return tokenAddress;\\n    }\\n\\n    function getTokens() public view returns (address[] memory) {\\n        return tokenList;\\n    }\\n\\n    function getTokenInfo(address _tokenAddress) public view returns (TokenInfo memory) {\\n        return tokens[_tokenAddress];\\n    }\\n}\",\"keccak256\":\"0x68c0c44bf75b9b784c46fef1b352d96332a2489cc5f0c1aff0a08a45dcb9a523\",\"license\":\"MIT\"},\"contracts/ERC20Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Mintable is ERC20, ERC20Pausable, Ownable {\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,  // Ticker is referred to as symbol\\n        uint256 _initialSupply,\\n        address _creator\\n    )\\n        ERC20(_name, _symbol)\\n        Ownable(_creator)\\n    {\\n        _mint(_creator, _initialSupply);\\n    }\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function mint(address to, uint256 amount) public onlyOwner {\\n        _mint(to, amount);\\n    }\\n\\n    // The following functions are overrides required by Solidity.\\n\\n    function _update(address from, address to, uint256 value)\\n        internal\\n        override(ERC20, ERC20Pausable)\\n    {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0x43673acc3a68ee5817f73d8d391a565bbc560a32069979a386f657970e922982\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461007a5733156100645760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36140f490816100808239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe60808060405260043610156200001457600080fd5b60003560e01c9081631f69565f1462000b0c5750806367e7259d14620003a0578063715018a614620003365780638da5cb5b146200030d5780639ead722214620002c7578063aa6ca80814620001f7578063e486033914620001385763f2fde38b146200008057600080fd5b346200013357602060031936011262000133576200009d62000c51565b620000a762000e8f565b6001600160a01b0380911690811562000102576000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b600080fd5b34620001335760206003193601126200013357620001b76001600160a01b03806200016262000c51565b16600052600360205260406000206200017b8162000ddc565b916200018a6001830162000ddc565b90600283015492620001c68260046003840154930154169360405197889760e0895260e089019062000c8d565b90878203602089015262000c8d565b93604086015260ff81161515606086015260ff8160081c161515608086015260101c1660a084015260c08301520390f35b34620001335760006003193601126200013357604051806004548083526020809301809160046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9060005b86828210620002a95786866200025e8288038362000cd1565b604051928392818401908285525180915260408401929160005b8281106200028857505050500390f35b83516001600160a01b03168552869550938101939281019260010162000278565b83546001600160a01b03168552909301926001928301920162000245565b3462000133576020600319360112620001335760043560045481101562000133576001600160a01b03620002fd60209262000d51565b9190546040519260031b1c168152f35b3462000133576000600319360112620001335760206001600160a01b0360005416604051908152f35b346200013357600060031936011262000133576200035362000e8f565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34620001335760c0600319360112620001335760043567ffffffffffffffff81116200013357620003d690369060040162000cf5565b60243567ffffffffffffffff81116200013357620003f990369060040162000cf5565b90606435151560643503620001335760843515156084350362000133576001600160a01b0360a4351660a4350362000133576200043562000e8f565b60ff60405160208184516200044e818385890162000c68565b81016001815203019020541662000aae5760ff6040516020818551620004788183858a0162000c68565b81016002815203019020541662000a50576064358062000a46575b15620009a1576040518061119e81011067ffffffffffffffff61119e83011117620007d35761119e62001ec7823980620004d960a435604435868661119e860162000ed4565b03906000f0801562000995576001600160a01b0316905b604051620004fe8162000cb4565b818152836020820152604435604082015260643515156060820152608435151560808201526001600160a01b03831660a08201526001600160a01b0360a4351660c08201526001600160a01b03831660005260036020526040600020815180519067ffffffffffffffff8211620007d35781906200057d845462000d9f565b601f811162000940575b50602090601f8311600114620008cf57600092620008c3575b50506000198260011b9260031b1c19161781555b602082015180519067ffffffffffffffff8211620007d357620005db600184015462000d9f565b601f811162000877575b50602090601f8311600114620007f557928260c0936004936001600160a01b0396600092620007e9575b50506000198260011b9260031b1c19161760018201555b604085015160028201556003810160608601511515815461ff006080890151151560081b16907fffffffffffffffffffff0000000000000000000000000000000000000000000060ff75ffffffffffffffffffffffffffffffffffffffff000060a08c015160101b16941691161717179055019201511673ffffffffffffffffffffffffffffffffffffffff1982541617905560045468010000000000000000811015620007d357602093620006e78260016200077d940160045562000d51565b81549060031b906001600160a01b03808816831b921b191617905560405185818551620007188183858a0162000c68565b8101600181520301902060ff1990600182825416179055600160405187818551620007478183858a0162000c68565b81016002815203019020918254161790556200076f6040519360608552606085019062000c8d565b908382038685015262000c8d565b60443560408301527fb7d8fd3c9d56d12c15c8e139bc4e6febd6ad2349b3ebe6a1a91c0a9e7797710d6001600160a01b0360a4351692806001600160a01b038616930390a36001600160a01b0360405191168152f35b634e487b7160e01b600052604160045260246000fd5b015190508a806200060f565b906001840160005260206000209160005b601f19851681106200085e5750836004936001600160a01b03969360019383601f1960c099161062000844575b505050811b01600182015562000626565b015160001960f88460031b161c191690558a808062000833565b9192602060018192868501518155019401920162000806565b600184016000526020600020601f840160051c810160208510620008bb575b601f830160051c82018110620008ae575050620005e5565b6000815560010162000896565b508062000896565b015190508780620005a0565b9250836000526020600020906000935b601f198416851062000924576001945083601f198116106200090a575b505050811b018155620005b4565b015160001960f88460031b161c19169055878080620008fc565b81810151835560209485019460019093019290910190620008df565b909150836000526020600020601f840160051c8101602085106200098d575b90849392915b601f830160051c820181106200097d57505062000587565b6000815585945060010162000965565b50806200095f565b6040513d6000823e3d90fd5b6064351562000a06576040518061105a81011067ffffffffffffffff61105a83011117620007d35761105a62003065823980620009ea60a435604435868661105a860162000ed4565b03906000f0801562000995576001600160a01b031690620004f0565b60405180610fb181011067ffffffffffffffff610fb183011117620007d357610fb162000f16823980620009ea60a4356044358686610fb1860162000ed4565b5060843562000493565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f546f6b656e207469636b657220616c72656164792065786973747300000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f546f6b656e206e616d6520616c726561647920657869737473000000000000006044820152fd5b3462000133576020806003193601126200013357600060c062000b2e62000c51565b9362000b3a8162000cb4565b606081526060848201528260408201528260608201528260808201528260a082015201526001600160a01b038092166000526003815260406000206040519262000b848462000cb4565b62000b8f8262000ddc565b845262000b9f6001830162000ddc565b83850190815281600284015493604087019485528660038201549162000c28846004606085019360ff8716151585528260a0608088019760ff8a60081c1615158952019760101c1687520154169560c08b0196875262000c148a60e06040519d8e9d8e5251918d01526101008c019062000c8d565b9051601f198b83030160408c015262000c8d565b96516060890152511515608088015251151560a0870152511660c0850152511660e08301520390f35b600435906001600160a01b03821682036200013357565b60005b83811062000c7c5750506000910152565b818101518382015260200162000c6b565b90601f19601f60209362000cad8151809281875287808801910162000c68565b0116010190565b60e0810190811067ffffffffffffffff821117620007d357604052565b90601f601f19910116810190811067ffffffffffffffff821117620007d357604052565b81601f82011215620001335780359067ffffffffffffffff8211620007d3576040519262000d2e6020601f19601f860116018562000cd1565b828452602083830101116200013357816000926020809301838601378301015290565b60045481101562000d895760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801562000dd1575b602083101462000dbb57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000daf565b906040519182600082549262000df28462000d9f565b90818452600194858116908160001462000e69575060011462000e22575b505062000e209250038362000cd1565b565b9093915060005260209081600020936000915b81831062000e5057505062000e209350820101388062000e10565b8554888401850152948501948794509183019162000e35565b905062000e2095506020935060ff1991501682840152151560051b820101388062000e10565b6001600160a01b0360005416330362000ea457565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b92949362000f0960609362000efa6001600160a01b039460808852608088019062000c8d565b90868203602088015262000c8d565b9560408501521691015256fe60406080815234620004095762000fb1803803806200001e816200040e565b9283398101608082820312620004095781516001600160401b0392908381116200040957826200005091830162000434565b602092838301519085821162000409576200006d91840162000434565b9060608684015193015160018060a01b0391828216968783036200040957815181811162000306576003908154906001948583811c93168015620003fe575b8b841014620003e85781908b601f948581116200038f575b50508b9084831160011462000328576000926200031c575b505060001982851b1c191690851b1782555b8651928311620003065760049687548581811c91168015620002fb575b8b821014620002e6578281116200029b575b5089918411600114620002305793839491849260009562000224575b50501b92600019911b1c19161783555b6005549086156200020d576001600160a81b03198216600891821b610100600160a81b031617600555869291901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490828201809211620001f8575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610b0a9081620004a78239f35b601190634e487b7160e01b6000525260246000fd5b8751631e4fbdf760e01b8152600081860152602490fd5b01519350388062000139565b9190601f1984169288600052848b6000209460005b8d8983831062000283575050501062000268575b50505050811b01835562000149565b01519060f884600019921b161c191690553880808062000259565b86860151895590970196948501948893500162000245565b886000528a6000208380870160051c8201928d8810620002dc575b0160051c019086905b828110620002cf5750506200011d565b60008155018690620002bf565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b90607f16906200010b565b634e487b7160e01b600052604160045260246000fd5b015190503880620000dc565b60008681528d8120899550929190601f198516908f5b8282106200037757505084116200035e575b505050811b018255620000ee565b015160001983871b60f8161c1916905538808062000350565b8385015186558b979095019493840193018f6200033e565b909192508560005284826000209181860160051c8301938610620003de575b918991869594930160051c01915b828110620003ce57508d9150620000c4565b60008155859450899101620003bc565b92508192620003ae565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000ac565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030657604052565b919080601f84011215620004095782516001600160401b03811162000306576020906200046a601f8201601f191683016200040e565b92818452828287010111620004095760005b8181106200049257508260009394955001015290565b85810183015184820184015282016200047c56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146107ca57508063095ea7b3146106f157806318160ddd146106d257806323b872dd14610577578063313ce5671461055b5780633f4ba83a146104d95780635c975abb146104b557806370a082311461047f578063715018a6146104065780638456cb59146103ab5780638da5cb5b1461038057806395d89b411461021f578063a9059cbb146101ee578063dd62ed3e146101a15763f2fde38b146100c857600080fd5b3461019d57602060031936011261019d576100e16108f7565b6100e9610928565b6001600160a01b039182821693841561016e57505074ffffffffffffffffffffffffffffffffffffffff006005549160081b167fffffffffffffffffffffff0000000000000000000000000000000000000000ff82161760055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5050346101ea57806003193601126101ea57806020926101bf6108f7565b6101c7610912565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101ea57806003193601126101ea5760209061021861020e6108f7565b602435903361096f565b5160018152f35b509190346101ea57816003193601126101ea57805190828454600181811c90808316928315610376575b602093848410811461034a57838852879594939291811561032b57506001146102cd575b50505003601f01601f191682019267ffffffffffffffff8411838510176102a1575082918261029d9252826108af565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103155750505090601f1992601f9282010191819361026d565b80548885018701528794509285019281016102f8565b60ff1916848701525050151560051b830101905081601f601f1961026d565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f1691610249565b5050346101ea57816003193601126101ea576020906001600160a01b0360055460081c169051908152f35b5050346101ea57816003193601126101ea5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916103e9610928565b6103f1610a9e565b600160ff19600554161760055551338152a180f35b833461047c578060031936011261047c5761041f610928565b806001600160a01b036005547fffffffffffffffffffffff0000000000000000000000000000000000000000ff811660055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101ea5760206003193601126101ea57806020926001600160a01b036104a66108f7565b16815280845220549051908152f35b5050346101ea57816003193601126101ea5760209060ff6005541690519015158152f35b503461019d578260031936011261019d576104f2610928565b6005549060ff82161561053457507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9160ff196020921660055551338152a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b5050346101ea57816003193601126101ea576020905160128152f35b50823461047c57606060031936011261047c576105926108f7565b61059a610912565b91604435936001600160a01b038316808352600160205286832033845260205286832054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83036105f5575b60208861021889898961096f565b86831061068d57811561065e57331561062f57508252600160209081528683203384528152918690209085900390558290610218876105e7565b602490848951917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602490848951917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b5050346101ea57816003193601126101ea576020906002549051908152f35b503461019d578160031936011261019d5761070a6108f7565b60243590331561079b576001600160a01b031691821561076c57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b602490858551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602483868651917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b849150833461019d578260031936011261019d5782600354600181811c908083169283156108a5575b602093848410811461034a57838852879594939291811561032b57506001146108465750505003601f01601f191682019267ffffffffffffffff8411838510176102a1575082918261029d9252826108af565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061088f5750505090601f1992601f9282010191819361026d565b8054888501870152879450928501928101610872565b91607f16916107f3565b60208082528251818301819052939260005b8581106108e357505050601f19601f8460006040809697860101520116010190565b8181018301518482016040015282016108c1565b600435906001600160a01b038216820361090d57565b600080fd5b602435906001600160a01b038216820361090d57565b6001600160a01b0360055460081c16330361093f57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916001600160a01b03808416928315610a6d5716928315610a3c57610992610a9e565b600090838252816020526040822054908382106109f1575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b60ff60055416610aaa57565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fdfea2646970667358221220e3b9a80bf3d7609d6b2296b27fbee8be3a89c78db8e37ebe0e472a3301d3d46464736f6c634300081400336040608081523462000409576200119e803803806200001e816200040e565b9283398101608082820312620004095781516001600160401b0392908381116200040957826200005091830162000434565b602092838301519085821162000409576200006d91840162000434565b9060608684015193015160018060a01b0391828216968783036200040957815181811162000306576003908154906001948583811c93168015620003fe575b8b841014620003e85781908b601f948581116200038f575b50508b9084831160011462000328576000926200031c575b505060001982851b1c191690851b1782555b8651928311620003065760049687548581811c91168015620002fb575b8b821014620002e6578281116200029b575b5089918411600114620002305793839491849260009562000224575b50501b92600019911b1c19161783555b6005549086156200020d576001600160a81b03198216600891821b610100600160a81b031617600555869291901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490828201809211620001f8575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610cf79081620004a78239f35b601190634e487b7160e01b6000525260246000fd5b8751631e4fbdf760e01b8152600081860152602490fd5b01519350388062000139565b9190601f1984169288600052848b6000209460005b8d8983831062000283575050501062000268575b50505050811b01835562000149565b01519060f884600019921b161c191690553880808062000259565b86860151895590970196948501948893500162000245565b886000528a6000208380870160051c8201928d8810620002dc575b0160051c019086905b828110620002cf5750506200011d565b60008155018690620002bf565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b90607f16906200010b565b634e487b7160e01b600052604160045260246000fd5b015190503880620000dc565b60008681528d8120899550929190601f198516908f5b8282106200037757505084116200035e575b505050811b018255620000ee565b015160001983871b60f8161c1916905538808062000350565b8385015186558b979095019493840193018f6200033e565b909192508560005284826000209181860160051c8301938610620003de575b918991869594930160051c01915b828110620003ce57508d9150620000c4565b60008155859450899101620003bc565b92508192620003ae565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000ac565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030657604052565b919080601f84011215620004095782516001600160401b03811162000306576020906200046a601f8201601f191683016200040e565b92818452828287010111620004095760005b8181106200049257508260009394955001015290565b85810183015184820184015282016200047c56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146107bc57508063095ea7b3146106e357806318160ddd146106c457806323b872dd14610687578063313ce5671461066b5780633f4ba83a146105e957806340c10f191461051957806342966c68146104fb5780635c975abb146104d757806370a08231146104a1578063715018a61461042b57806379cc6790146103f55780638456cb591461039a5780638da5cb5b1461036f57806395d89b4114610240578063a9059cbb1461020f578063dd62ed3e146101c25763f2fde38b146100e957600080fd5b346101be5760206003193601126101be576101026108e9565b61010a61091a565b6001600160a01b039182821693841561018f57505074ffffffffffffffffffffffffffffffffffffffff006005549160081b167fffffffffffffffffffffff0000000000000000000000000000000000000000ff82161760055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b50503461020b578060031936011261020b57806020926101e06108e9565b6101e8610904565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50503461020b578060031936011261020b5760209061023961022f6108e9565b6024359033610961565b5160018152f35b5091903461020b578160031936011261020b57805190828454600181811c90808316928315610365575b602093848410811461035257838852879594939291811561033357506001146102d5575b50505003601f01601f191682019267ffffffffffffffff8411838510176102c257508291826102be9252826108a1565b0390f35b80604186634e487b7160e01b6024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061031d5750505090601f1992601f9282010191819361028e565b8054888501870152879450928501928101610300565b60ff1916848701525050151560051b830101905081601f601f1961028e565b60248960228c634e487b7160e01b835252fd5b91607f169161026a565b50503461020b578160031936011261020b576020906001600160a01b0360055460081c169051908152f35b50503461020b578160031936011261020b5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916103d861091a565b6103e0610c8b565b600160ff19600554161760055551338152a180f35b50503461020b57600319360112610428576104256104116108e9565b60243590610420823383610a90565b610bcb565b80f35b80fd5b833461042857806003193601126104285761044461091a565b806001600160a01b036005547fffffffffffffffffffffff0000000000000000000000000000000000000000ff811660055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020b57602060031936011261020b57806020926001600160a01b036104c86108e9565b16815280845220549051908152f35b50503461020b578160031936011261020b5760209060ff6005541690519015158152f35b83823461020b57602060031936011261020b57610425903533610bcb565b5090346101be57806003193601126101be576105336108e9565b906001600160a01b036024359261054861091a565b169283156105bb57610558610c8b565b600254908382018092116105a8575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b856011602492634e487b7160e01b835252fd5b8460249251917fec442f05000000000000000000000000000000000000000000000000000000008352820152fd5b50346101be57826003193601126101be5761060261091a565b6005549060ff82161561064457507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9160ff196020921660055551338152a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b50503461020b578160031936011261020b576020905160128152f35b50503461020b57606060031936011261020b576020906102396106a86108e9565b6106b0610904565b604435916106bf833383610a90565b610961565b50503461020b578160031936011261020b576020906002549051908152f35b50346101be57816003193601126101be576106fc6108e9565b60243590331561078d576001600160a01b031691821561075e57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b602490858551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602483868651917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b84915083346101be57826003193601126101be5782600354600181811c90808316928315610897575b602093848410811461035257838852879594939291811561033357506001146108385750505003601f01601f191682019267ffffffffffffffff8411838510176102c257508291826102be9252826108a1565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106108815750505090601f1992601f9282010191819361028e565b8054888501870152879450928501928101610864565b91607f16916107e5565b60208082528251818301819052939260005b8581106108d557505050601f19601f8460006040809697860101520116010190565b8181018301518482016040015282016108b3565b600435906001600160a01b03821682036108ff57565b600080fd5b602435906001600160a01b03821682036108ff57565b6001600160a01b0360055460081c16330361093157565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916001600160a01b03808416928315610a5f5716928315610a2e57610984610c8b565b600090838252816020526040822054908382106109e3575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b916001600160a01b038093169160009383855260016020526040938486209183169182875260205284862054927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8403610aee575b50505050505050565b848410610b8257508015610b52578115610b2257855260016020528385209085526020520391205538808080808080610ae5565b6024868651907f94280d620000000000000000000000000000000000000000000000000000000082526004820152fd5b6024868651907fe602df050000000000000000000000000000000000000000000000000000000082526004820152fd5b85517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b039190911660048201526024810184905260448101859052606490fd5b906001600160a01b038216908115610a5f57610be5610c8b565b60009282845283602052604084205490828210610c405750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b60ff60055416610c9757565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fdfea2646970667358221220ceb806a6ddd04b4b6705eeacbd78b4d760befb6fe52b07fa877bcbab789c88a764736f6c634300081400336040608081523462000409576200105a803803806200001e816200040e565b9283398101608082820312620004095781516001600160401b0392908381116200040957826200005091830162000434565b602092838301519085821162000409576200006d91840162000434565b9060608684015193015160018060a01b0391828216968783036200040957815181811162000306576003908154906001948583811c93168015620003fe575b8b841014620003e85781908b601f948581116200038f575b50508b9084831160011462000328576000926200031c575b505060001982851b1c191690851b1782555b8651928311620003065760049687548581811c91168015620002fb575b8b821014620002e6578281116200029b575b5089918411600114620002305793839491849260009562000224575b50501b92600019911b1c19161783555b6005549086156200020d576001600160a81b03198216600891821b610100600160a81b031617600555869291901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490828201809211620001f8575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610bb39081620004a78239f35b601190634e487b7160e01b6000525260246000fd5b8751631e4fbdf760e01b8152600081860152602490fd5b01519350388062000139565b9190601f1984169288600052848b6000209460005b8d8983831062000283575050501062000268575b50505050811b01835562000149565b01519060f884600019921b161c191690553880808062000259565b86860151895590970196948501948893500162000245565b886000528a6000208380870160051c8201928d8810620002dc575b0160051c019086905b828110620002cf5750506200011d565b60008155018690620002bf565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b90607f16906200010b565b634e487b7160e01b600052604160045260246000fd5b015190503880620000dc565b60008681528d8120899550929190601f198516908f5b8282106200037757505084116200035e575b505050811b018255620000ee565b015160001983871b60f8161c1916905538808062000350565b8385015186558b979095019493840193018f6200033e565b909192508560005284826000209181860160051c8301938610620003de575b918991869594930160051c01915b828110620003ce57508d9150620000c4565b60008155859450899101620003bc565b92508192620003ae565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000ac565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030657604052565b919080601f84011215620004095782516001600160401b03811162000306576020906200046a601f8201601f191683016200040e565b92818452828287010111620004095760005b8181106200049257508260009394955001015290565b85810183015184820184015282016200047c56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461087357508063095ea7b31461079a57806318160ddd1461077b57806323b872dd14610620578063313ce567146106045780633f4ba83a1461058257806340c10f19146104b25780635c975abb1461048e57806370a0823114610458578063715018a6146103df5780638456cb59146103845780638da5cb5b1461035957806395d89b411461022a578063a9059cbb146101f9578063dd62ed3e146101ac5763f2fde38b146100d357600080fd5b346101a85760206003193601126101a8576100ec6109a0565b6100f46109d1565b6001600160a01b039182821693841561017957505074ffffffffffffffffffffffffffffffffffffffff006005549160081b167fffffffffffffffffffffff0000000000000000000000000000000000000000ff82161760055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5050346101f557806003193601126101f557806020926101ca6109a0565b6101d26109bb565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101f557806003193601126101f5576020906102236102196109a0565b6024359033610a18565b5160018152f35b509190346101f557816003193601126101f557805190828454600181811c9080831692831561034f575b602093848410811461033c57838852879594939291811561031d57506001146102bf575b50505003601f01601f191682019267ffffffffffffffff8411838510176102ac57508291826102a8925282610958565b0390f35b80604186634e487b7160e01b6024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103075750505090601f1992601f92820101918193610278565b80548885018701528794509285019281016102ea565b60ff1916848701525050151560051b830101905081601f601f19610278565b60248960228c634e487b7160e01b835252fd5b91607f1691610254565b5050346101f557816003193601126101f5576020906001600160a01b0360055460081c169051908152f35b5050346101f557816003193601126101f55760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916103c26109d1565b6103ca610b47565b600160ff19600554161760055551338152a180f35b83346104555780600319360112610455576103f86109d1565b806001600160a01b036005547fffffffffffffffffffffff0000000000000000000000000000000000000000ff811660055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101f55760206003193601126101f557806020926001600160a01b0361047f6109a0565b16815280845220549051908152f35b5050346101f557816003193601126101f55760209060ff6005541690519015158152f35b5090346101a857806003193601126101a8576104cc6109a0565b906001600160a01b03602435926104e16109d1565b16928315610554576104f1610b47565b60025490838201809211610541575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b856011602492634e487b7160e01b835252fd5b8460249251917fec442f05000000000000000000000000000000000000000000000000000000008352820152fd5b50346101a857826003193601126101a85761059b6109d1565b6005549060ff8216156105dd57507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9160ff196020921660055551338152a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b5050346101f557816003193601126101f5576020905160128152f35b5082346104555760606003193601126104555761063b6109a0565b6106436109bb565b91604435936001600160a01b038316808352600160205286832033845260205286832054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830361069e575b602088610223898989610a18565b8683106107365781156107075733156106d85750825260016020908152868320338452815291869020908590039055829061022387610690565b602490848951917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602490848951917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b5050346101f557816003193601126101f5576020906002549051908152f35b50346101a857816003193601126101a8576107b36109a0565b602435903315610844576001600160a01b031691821561081557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b602490858551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602483868651917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b84915083346101a857826003193601126101a85782600354600181811c9080831692831561094e575b602093848410811461033c57838852879594939291811561031d57506001146108ef5750505003601f01601f191682019267ffffffffffffffff8411838510176102ac57508291826102a8925282610958565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106109385750505090601f1992601f92820101918193610278565b805488850187015287945092850192810161091b565b91607f169161089c565b60208082528251818301819052939260005b85811061098c57505050601f19601f8460006040809697860101520116010190565b81810183015184820160400152820161096a565b600435906001600160a01b03821682036109b657565b600080fd5b602435906001600160a01b03821682036109b657565b6001600160a01b0360055460081c1633036109e857565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916001600160a01b03808416928315610b165716928315610ae557610a3b610b47565b60009083825281602052604082205490838210610a9a575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b60ff60055416610b5357565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fdfea26469706673582212202f4002df4e3a7516d2903613a85afa01c205ba2a354e42830cf47714a1a1280c64736f6c63430008140033a26469706673582212205fce7b87ec5b1fdc6d51f507fff0081131cdd0c26e0bc0b68683af857054082764736f6c63430008140033",
  "deployedBytecode": "0x60808060405260043610156200001457600080fd5b60003560e01c9081631f69565f1462000b0c5750806367e7259d14620003a0578063715018a614620003365780638da5cb5b146200030d5780639ead722214620002c7578063aa6ca80814620001f7578063e486033914620001385763f2fde38b146200008057600080fd5b346200013357602060031936011262000133576200009d62000c51565b620000a762000e8f565b6001600160a01b0380911690811562000102576000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b600080fd5b34620001335760206003193601126200013357620001b76001600160a01b03806200016262000c51565b16600052600360205260406000206200017b8162000ddc565b916200018a6001830162000ddc565b90600283015492620001c68260046003840154930154169360405197889760e0895260e089019062000c8d565b90878203602089015262000c8d565b93604086015260ff81161515606086015260ff8160081c161515608086015260101c1660a084015260c08301520390f35b34620001335760006003193601126200013357604051806004548083526020809301809160046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9060005b86828210620002a95786866200025e8288038362000cd1565b604051928392818401908285525180915260408401929160005b8281106200028857505050500390f35b83516001600160a01b03168552869550938101939281019260010162000278565b83546001600160a01b03168552909301926001928301920162000245565b3462000133576020600319360112620001335760043560045481101562000133576001600160a01b03620002fd60209262000d51565b9190546040519260031b1c168152f35b3462000133576000600319360112620001335760206001600160a01b0360005416604051908152f35b346200013357600060031936011262000133576200035362000e8f565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34620001335760c0600319360112620001335760043567ffffffffffffffff81116200013357620003d690369060040162000cf5565b60243567ffffffffffffffff81116200013357620003f990369060040162000cf5565b90606435151560643503620001335760843515156084350362000133576001600160a01b0360a4351660a4350362000133576200043562000e8f565b60ff60405160208184516200044e818385890162000c68565b81016001815203019020541662000aae5760ff6040516020818551620004788183858a0162000c68565b81016002815203019020541662000a50576064358062000a46575b15620009a1576040518061119e81011067ffffffffffffffff61119e83011117620007d35761119e62001ec7823980620004d960a435604435868661119e860162000ed4565b03906000f0801562000995576001600160a01b0316905b604051620004fe8162000cb4565b818152836020820152604435604082015260643515156060820152608435151560808201526001600160a01b03831660a08201526001600160a01b0360a4351660c08201526001600160a01b03831660005260036020526040600020815180519067ffffffffffffffff8211620007d35781906200057d845462000d9f565b601f811162000940575b50602090601f8311600114620008cf57600092620008c3575b50506000198260011b9260031b1c19161781555b602082015180519067ffffffffffffffff8211620007d357620005db600184015462000d9f565b601f811162000877575b50602090601f8311600114620007f557928260c0936004936001600160a01b0396600092620007e9575b50506000198260011b9260031b1c19161760018201555b604085015160028201556003810160608601511515815461ff006080890151151560081b16907fffffffffffffffffffff0000000000000000000000000000000000000000000060ff75ffffffffffffffffffffffffffffffffffffffff000060a08c015160101b16941691161717179055019201511673ffffffffffffffffffffffffffffffffffffffff1982541617905560045468010000000000000000811015620007d357602093620006e78260016200077d940160045562000d51565b81549060031b906001600160a01b03808816831b921b191617905560405185818551620007188183858a0162000c68565b8101600181520301902060ff1990600182825416179055600160405187818551620007478183858a0162000c68565b81016002815203019020918254161790556200076f6040519360608552606085019062000c8d565b908382038685015262000c8d565b60443560408301527fb7d8fd3c9d56d12c15c8e139bc4e6febd6ad2349b3ebe6a1a91c0a9e7797710d6001600160a01b0360a4351692806001600160a01b038616930390a36001600160a01b0360405191168152f35b634e487b7160e01b600052604160045260246000fd5b015190508a806200060f565b906001840160005260206000209160005b601f19851681106200085e5750836004936001600160a01b03969360019383601f1960c099161062000844575b505050811b01600182015562000626565b015160001960f88460031b161c191690558a808062000833565b9192602060018192868501518155019401920162000806565b600184016000526020600020601f840160051c810160208510620008bb575b601f830160051c82018110620008ae575050620005e5565b6000815560010162000896565b508062000896565b015190508780620005a0565b9250836000526020600020906000935b601f198416851062000924576001945083601f198116106200090a575b505050811b018155620005b4565b015160001960f88460031b161c19169055878080620008fc565b81810151835560209485019460019093019290910190620008df565b909150836000526020600020601f840160051c8101602085106200098d575b90849392915b601f830160051c820181106200097d57505062000587565b6000815585945060010162000965565b50806200095f565b6040513d6000823e3d90fd5b6064351562000a06576040518061105a81011067ffffffffffffffff61105a83011117620007d35761105a62003065823980620009ea60a435604435868661105a860162000ed4565b03906000f0801562000995576001600160a01b031690620004f0565b60405180610fb181011067ffffffffffffffff610fb183011117620007d357610fb162000f16823980620009ea60a4356044358686610fb1860162000ed4565b5060843562000493565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f546f6b656e207469636b657220616c72656164792065786973747300000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f546f6b656e206e616d6520616c726561647920657869737473000000000000006044820152fd5b3462000133576020806003193601126200013357600060c062000b2e62000c51565b9362000b3a8162000cb4565b606081526060848201528260408201528260608201528260808201528260a082015201526001600160a01b038092166000526003815260406000206040519262000b848462000cb4565b62000b8f8262000ddc565b845262000b9f6001830162000ddc565b83850190815281600284015493604087019485528660038201549162000c28846004606085019360ff8716151585528260a0608088019760ff8a60081c1615158952019760101c1687520154169560c08b0196875262000c148a60e06040519d8e9d8e5251918d01526101008c019062000c8d565b9051601f198b83030160408c015262000c8d565b96516060890152511515608088015251151560a0870152511660c0850152511660e08301520390f35b600435906001600160a01b03821682036200013357565b60005b83811062000c7c5750506000910152565b818101518382015260200162000c6b565b90601f19601f60209362000cad8151809281875287808801910162000c68565b0116010190565b60e0810190811067ffffffffffffffff821117620007d357604052565b90601f601f19910116810190811067ffffffffffffffff821117620007d357604052565b81601f82011215620001335780359067ffffffffffffffff8211620007d3576040519262000d2e6020601f19601f860116018562000cd1565b828452602083830101116200013357816000926020809301838601378301015290565b60045481101562000d895760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801562000dd1575b602083101462000dbb57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000daf565b906040519182600082549262000df28462000d9f565b90818452600194858116908160001462000e69575060011462000e22575b505062000e209250038362000cd1565b565b9093915060005260209081600020936000915b81831062000e5057505062000e209350820101388062000e10565b8554888401850152948501948794509183019162000e35565b905062000e2095506020935060ff1991501682840152151560051b820101388062000e10565b6001600160a01b0360005416330362000ea457565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b92949362000f0960609362000efa6001600160a01b039460808852608088019062000c8d565b90868203602088015262000c8d565b9560408501521691015256fe60406080815234620004095762000fb1803803806200001e816200040e565b9283398101608082820312620004095781516001600160401b0392908381116200040957826200005091830162000434565b602092838301519085821162000409576200006d91840162000434565b9060608684015193015160018060a01b0391828216968783036200040957815181811162000306576003908154906001948583811c93168015620003fe575b8b841014620003e85781908b601f948581116200038f575b50508b9084831160011462000328576000926200031c575b505060001982851b1c191690851b1782555b8651928311620003065760049687548581811c91168015620002fb575b8b821014620002e6578281116200029b575b5089918411600114620002305793839491849260009562000224575b50501b92600019911b1c19161783555b6005549086156200020d576001600160a81b03198216600891821b610100600160a81b031617600555869291901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490828201809211620001f8575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610b0a9081620004a78239f35b601190634e487b7160e01b6000525260246000fd5b8751631e4fbdf760e01b8152600081860152602490fd5b01519350388062000139565b9190601f1984169288600052848b6000209460005b8d8983831062000283575050501062000268575b50505050811b01835562000149565b01519060f884600019921b161c191690553880808062000259565b86860151895590970196948501948893500162000245565b886000528a6000208380870160051c8201928d8810620002dc575b0160051c019086905b828110620002cf5750506200011d565b60008155018690620002bf565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b90607f16906200010b565b634e487b7160e01b600052604160045260246000fd5b015190503880620000dc565b60008681528d8120899550929190601f198516908f5b8282106200037757505084116200035e575b505050811b018255620000ee565b015160001983871b60f8161c1916905538808062000350565b8385015186558b979095019493840193018f6200033e565b909192508560005284826000209181860160051c8301938610620003de575b918991869594930160051c01915b828110620003ce57508d9150620000c4565b60008155859450899101620003bc565b92508192620003ae565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000ac565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030657604052565b919080601f84011215620004095782516001600160401b03811162000306576020906200046a601f8201601f191683016200040e565b92818452828287010111620004095760005b8181106200049257508260009394955001015290565b85810183015184820184015282016200047c56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146107ca57508063095ea7b3146106f157806318160ddd146106d257806323b872dd14610577578063313ce5671461055b5780633f4ba83a146104d95780635c975abb146104b557806370a082311461047f578063715018a6146104065780638456cb59146103ab5780638da5cb5b1461038057806395d89b411461021f578063a9059cbb146101ee578063dd62ed3e146101a15763f2fde38b146100c857600080fd5b3461019d57602060031936011261019d576100e16108f7565b6100e9610928565b6001600160a01b039182821693841561016e57505074ffffffffffffffffffffffffffffffffffffffff006005549160081b167fffffffffffffffffffffff0000000000000000000000000000000000000000ff82161760055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5050346101ea57806003193601126101ea57806020926101bf6108f7565b6101c7610912565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101ea57806003193601126101ea5760209061021861020e6108f7565b602435903361096f565b5160018152f35b509190346101ea57816003193601126101ea57805190828454600181811c90808316928315610376575b602093848410811461034a57838852879594939291811561032b57506001146102cd575b50505003601f01601f191682019267ffffffffffffffff8411838510176102a1575082918261029d9252826108af565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103155750505090601f1992601f9282010191819361026d565b80548885018701528794509285019281016102f8565b60ff1916848701525050151560051b830101905081601f601f1961026d565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f1691610249565b5050346101ea57816003193601126101ea576020906001600160a01b0360055460081c169051908152f35b5050346101ea57816003193601126101ea5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916103e9610928565b6103f1610a9e565b600160ff19600554161760055551338152a180f35b833461047c578060031936011261047c5761041f610928565b806001600160a01b036005547fffffffffffffffffffffff0000000000000000000000000000000000000000ff811660055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101ea5760206003193601126101ea57806020926001600160a01b036104a66108f7565b16815280845220549051908152f35b5050346101ea57816003193601126101ea5760209060ff6005541690519015158152f35b503461019d578260031936011261019d576104f2610928565b6005549060ff82161561053457507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9160ff196020921660055551338152a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b5050346101ea57816003193601126101ea576020905160128152f35b50823461047c57606060031936011261047c576105926108f7565b61059a610912565b91604435936001600160a01b038316808352600160205286832033845260205286832054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83036105f5575b60208861021889898961096f565b86831061068d57811561065e57331561062f57508252600160209081528683203384528152918690209085900390558290610218876105e7565b602490848951917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602490848951917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b5050346101ea57816003193601126101ea576020906002549051908152f35b503461019d578160031936011261019d5761070a6108f7565b60243590331561079b576001600160a01b031691821561076c57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b602490858551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602483868651917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b849150833461019d578260031936011261019d5782600354600181811c908083169283156108a5575b602093848410811461034a57838852879594939291811561032b57506001146108465750505003601f01601f191682019267ffffffffffffffff8411838510176102a1575082918261029d9252826108af565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061088f5750505090601f1992601f9282010191819361026d565b8054888501870152879450928501928101610872565b91607f16916107f3565b60208082528251818301819052939260005b8581106108e357505050601f19601f8460006040809697860101520116010190565b8181018301518482016040015282016108c1565b600435906001600160a01b038216820361090d57565b600080fd5b602435906001600160a01b038216820361090d57565b6001600160a01b0360055460081c16330361093f57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916001600160a01b03808416928315610a6d5716928315610a3c57610992610a9e565b600090838252816020526040822054908382106109f1575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b60ff60055416610aaa57565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fdfea2646970667358221220e3b9a80bf3d7609d6b2296b27fbee8be3a89c78db8e37ebe0e472a3301d3d46464736f6c634300081400336040608081523462000409576200119e803803806200001e816200040e565b9283398101608082820312620004095781516001600160401b0392908381116200040957826200005091830162000434565b602092838301519085821162000409576200006d91840162000434565b9060608684015193015160018060a01b0391828216968783036200040957815181811162000306576003908154906001948583811c93168015620003fe575b8b841014620003e85781908b601f948581116200038f575b50508b9084831160011462000328576000926200031c575b505060001982851b1c191690851b1782555b8651928311620003065760049687548581811c91168015620002fb575b8b821014620002e6578281116200029b575b5089918411600114620002305793839491849260009562000224575b50501b92600019911b1c19161783555b6005549086156200020d576001600160a81b03198216600891821b610100600160a81b031617600555869291901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490828201809211620001f8575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610cf79081620004a78239f35b601190634e487b7160e01b6000525260246000fd5b8751631e4fbdf760e01b8152600081860152602490fd5b01519350388062000139565b9190601f1984169288600052848b6000209460005b8d8983831062000283575050501062000268575b50505050811b01835562000149565b01519060f884600019921b161c191690553880808062000259565b86860151895590970196948501948893500162000245565b886000528a6000208380870160051c8201928d8810620002dc575b0160051c019086905b828110620002cf5750506200011d565b60008155018690620002bf565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b90607f16906200010b565b634e487b7160e01b600052604160045260246000fd5b015190503880620000dc565b60008681528d8120899550929190601f198516908f5b8282106200037757505084116200035e575b505050811b018255620000ee565b015160001983871b60f8161c1916905538808062000350565b8385015186558b979095019493840193018f6200033e565b909192508560005284826000209181860160051c8301938610620003de575b918991869594930160051c01915b828110620003ce57508d9150620000c4565b60008155859450899101620003bc565b92508192620003ae565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000ac565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030657604052565b919080601f84011215620004095782516001600160401b03811162000306576020906200046a601f8201601f191683016200040e565b92818452828287010111620004095760005b8181106200049257508260009394955001015290565b85810183015184820184015282016200047c56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146107bc57508063095ea7b3146106e357806318160ddd146106c457806323b872dd14610687578063313ce5671461066b5780633f4ba83a146105e957806340c10f191461051957806342966c68146104fb5780635c975abb146104d757806370a08231146104a1578063715018a61461042b57806379cc6790146103f55780638456cb591461039a5780638da5cb5b1461036f57806395d89b4114610240578063a9059cbb1461020f578063dd62ed3e146101c25763f2fde38b146100e957600080fd5b346101be5760206003193601126101be576101026108e9565b61010a61091a565b6001600160a01b039182821693841561018f57505074ffffffffffffffffffffffffffffffffffffffff006005549160081b167fffffffffffffffffffffff0000000000000000000000000000000000000000ff82161760055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b50503461020b578060031936011261020b57806020926101e06108e9565b6101e8610904565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50503461020b578060031936011261020b5760209061023961022f6108e9565b6024359033610961565b5160018152f35b5091903461020b578160031936011261020b57805190828454600181811c90808316928315610365575b602093848410811461035257838852879594939291811561033357506001146102d5575b50505003601f01601f191682019267ffffffffffffffff8411838510176102c257508291826102be9252826108a1565b0390f35b80604186634e487b7160e01b6024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061031d5750505090601f1992601f9282010191819361028e565b8054888501870152879450928501928101610300565b60ff1916848701525050151560051b830101905081601f601f1961028e565b60248960228c634e487b7160e01b835252fd5b91607f169161026a565b50503461020b578160031936011261020b576020906001600160a01b0360055460081c169051908152f35b50503461020b578160031936011261020b5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916103d861091a565b6103e0610c8b565b600160ff19600554161760055551338152a180f35b50503461020b57600319360112610428576104256104116108e9565b60243590610420823383610a90565b610bcb565b80f35b80fd5b833461042857806003193601126104285761044461091a565b806001600160a01b036005547fffffffffffffffffffffff0000000000000000000000000000000000000000ff811660055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020b57602060031936011261020b57806020926001600160a01b036104c86108e9565b16815280845220549051908152f35b50503461020b578160031936011261020b5760209060ff6005541690519015158152f35b83823461020b57602060031936011261020b57610425903533610bcb565b5090346101be57806003193601126101be576105336108e9565b906001600160a01b036024359261054861091a565b169283156105bb57610558610c8b565b600254908382018092116105a8575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b856011602492634e487b7160e01b835252fd5b8460249251917fec442f05000000000000000000000000000000000000000000000000000000008352820152fd5b50346101be57826003193601126101be5761060261091a565b6005549060ff82161561064457507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9160ff196020921660055551338152a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b50503461020b578160031936011261020b576020905160128152f35b50503461020b57606060031936011261020b576020906102396106a86108e9565b6106b0610904565b604435916106bf833383610a90565b610961565b50503461020b578160031936011261020b576020906002549051908152f35b50346101be57816003193601126101be576106fc6108e9565b60243590331561078d576001600160a01b031691821561075e57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b602490858551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602483868651917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b84915083346101be57826003193601126101be5782600354600181811c90808316928315610897575b602093848410811461035257838852879594939291811561033357506001146108385750505003601f01601f191682019267ffffffffffffffff8411838510176102c257508291826102be9252826108a1565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106108815750505090601f1992601f9282010191819361028e565b8054888501870152879450928501928101610864565b91607f16916107e5565b60208082528251818301819052939260005b8581106108d557505050601f19601f8460006040809697860101520116010190565b8181018301518482016040015282016108b3565b600435906001600160a01b03821682036108ff57565b600080fd5b602435906001600160a01b03821682036108ff57565b6001600160a01b0360055460081c16330361093157565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916001600160a01b03808416928315610a5f5716928315610a2e57610984610c8b565b600090838252816020526040822054908382106109e3575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b916001600160a01b038093169160009383855260016020526040938486209183169182875260205284862054927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8403610aee575b50505050505050565b848410610b8257508015610b52578115610b2257855260016020528385209085526020520391205538808080808080610ae5565b6024868651907f94280d620000000000000000000000000000000000000000000000000000000082526004820152fd5b6024868651907fe602df050000000000000000000000000000000000000000000000000000000082526004820152fd5b85517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b039190911660048201526024810184905260448101859052606490fd5b906001600160a01b038216908115610a5f57610be5610c8b565b60009282845283602052604084205490828210610c405750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b60ff60055416610c9757565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fdfea2646970667358221220ceb806a6ddd04b4b6705eeacbd78b4d760befb6fe52b07fa877bcbab789c88a764736f6c634300081400336040608081523462000409576200105a803803806200001e816200040e565b9283398101608082820312620004095781516001600160401b0392908381116200040957826200005091830162000434565b602092838301519085821162000409576200006d91840162000434565b9060608684015193015160018060a01b0391828216968783036200040957815181811162000306576003908154906001948583811c93168015620003fe575b8b841014620003e85781908b601f948581116200038f575b50508b9084831160011462000328576000926200031c575b505060001982851b1c191690851b1782555b8651928311620003065760049687548581811c91168015620002fb575b8b821014620002e6578281116200029b575b5089918411600114620002305793839491849260009562000224575b50501b92600019911b1c19161783555b6005549086156200020d576001600160a81b03198216600891821b610100600160a81b031617600555869291901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490828201809211620001f8575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610bb39081620004a78239f35b601190634e487b7160e01b6000525260246000fd5b8751631e4fbdf760e01b8152600081860152602490fd5b01519350388062000139565b9190601f1984169288600052848b6000209460005b8d8983831062000283575050501062000268575b50505050811b01835562000149565b01519060f884600019921b161c191690553880808062000259565b86860151895590970196948501948893500162000245565b886000528a6000208380870160051c8201928d8810620002dc575b0160051c019086905b828110620002cf5750506200011d565b60008155018690620002bf565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b90607f16906200010b565b634e487b7160e01b600052604160045260246000fd5b015190503880620000dc565b60008681528d8120899550929190601f198516908f5b8282106200037757505084116200035e575b505050811b018255620000ee565b015160001983871b60f8161c1916905538808062000350565b8385015186558b979095019493840193018f6200033e565b909192508560005284826000209181860160051c8301938610620003de575b918991869594930160051c01915b828110620003ce57508d9150620000c4565b60008155859450899101620003bc565b92508192620003ae565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000ac565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030657604052565b919080601f84011215620004095782516001600160401b03811162000306576020906200046a601f8201601f191683016200040e565b92818452828287010111620004095760005b8181106200049257508260009394955001015290565b85810183015184820184015282016200047c56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461087357508063095ea7b31461079a57806318160ddd1461077b57806323b872dd14610620578063313ce567146106045780633f4ba83a1461058257806340c10f19146104b25780635c975abb1461048e57806370a0823114610458578063715018a6146103df5780638456cb59146103845780638da5cb5b1461035957806395d89b411461022a578063a9059cbb146101f9578063dd62ed3e146101ac5763f2fde38b146100d357600080fd5b346101a85760206003193601126101a8576100ec6109a0565b6100f46109d1565b6001600160a01b039182821693841561017957505074ffffffffffffffffffffffffffffffffffffffff006005549160081b167fffffffffffffffffffffff0000000000000000000000000000000000000000ff82161760055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5050346101f557806003193601126101f557806020926101ca6109a0565b6101d26109bb565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101f557806003193601126101f5576020906102236102196109a0565b6024359033610a18565b5160018152f35b509190346101f557816003193601126101f557805190828454600181811c9080831692831561034f575b602093848410811461033c57838852879594939291811561031d57506001146102bf575b50505003601f01601f191682019267ffffffffffffffff8411838510176102ac57508291826102a8925282610958565b0390f35b80604186634e487b7160e01b6024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103075750505090601f1992601f92820101918193610278565b80548885018701528794509285019281016102ea565b60ff1916848701525050151560051b830101905081601f601f19610278565b60248960228c634e487b7160e01b835252fd5b91607f1691610254565b5050346101f557816003193601126101f5576020906001600160a01b0360055460081c169051908152f35b5050346101f557816003193601126101f55760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916103c26109d1565b6103ca610b47565b600160ff19600554161760055551338152a180f35b83346104555780600319360112610455576103f86109d1565b806001600160a01b036005547fffffffffffffffffffffff0000000000000000000000000000000000000000ff811660055560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101f55760206003193601126101f557806020926001600160a01b0361047f6109a0565b16815280845220549051908152f35b5050346101f557816003193601126101f55760209060ff6005541690519015158152f35b5090346101a857806003193601126101a8576104cc6109a0565b906001600160a01b03602435926104e16109d1565b16928315610554576104f1610b47565b60025490838201809211610541575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b856011602492634e487b7160e01b835252fd5b8460249251917fec442f05000000000000000000000000000000000000000000000000000000008352820152fd5b50346101a857826003193601126101a85761059b6109d1565b6005549060ff8216156105dd57507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9160ff196020921660055551338152a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b5050346101f557816003193601126101f5576020905160128152f35b5082346104555760606003193601126104555761063b6109a0565b6106436109bb565b91604435936001600160a01b038316808352600160205286832033845260205286832054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830361069e575b602088610223898989610a18565b8683106107365781156107075733156106d85750825260016020908152868320338452815291869020908590039055829061022387610690565b602490848951917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602490848951917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b5050346101f557816003193601126101f5576020906002549051908152f35b50346101a857816003193601126101a8576107b36109a0565b602435903315610844576001600160a01b031691821561081557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b602490858551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602483868651917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b84915083346101a857826003193601126101a85782600354600181811c9080831692831561094e575b602093848410811461033c57838852879594939291811561031d57506001146108ef5750505003601f01601f191682019267ffffffffffffffff8411838510176102ac57508291826102a8925282610958565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106109385750505090601f1992601f92820101918193610278565b805488850187015287945092850192810161091b565b91607f169161089c565b60208082528251818301819052939260005b85811061098c57505050601f19601f8460006040809697860101520116010190565b81810183015184820160400152820161096a565b600435906001600160a01b03821682036109b657565b600080fd5b602435906001600160a01b03821682036109b657565b6001600160a01b0360055460081c1633036109e857565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b916001600160a01b03808416928315610b165716928315610ae557610a3b610b47565b60009083825281602052604082205490838210610a9a575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b60ff60055416610b5357565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fdfea26469706673582212202f4002df4e3a7516d2903613a85afa01c205ba2a354e42830cf47714a1a1280c64736f6c63430008140033a26469706673582212205fce7b87ec5b1fdc6d51f507fff0081131cdd0c26e0bc0b68683af857054082764736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/ERC20Factory.sol:ERC20Factory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1345,
        "contract": "contracts/ERC20Factory.sol:ERC20Factory",
        "label": "nameExists",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 1349,
        "contract": "contracts/ERC20Factory.sol:ERC20Factory",
        "label": "tickerExists",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 1354,
        "contract": "contracts/ERC20Factory.sol:ERC20Factory",
        "label": "tokens",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(TokenInfo)1321_storage)"
      },
      {
        "astId": 1357,
        "contract": "contracts/ERC20Factory.sol:ERC20Factory",
        "label": "tokenList",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(TokenInfo)1321_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ERC20Factory.TokenInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenInfo)1321_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(TokenInfo)1321_storage": {
        "encoding": "inplace",
        "label": "struct ERC20Factory.TokenInfo",
        "members": [
          {
            "astId": 1308,
            "contract": "contracts/ERC20Factory.sol:ERC20Factory",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1310,
            "contract": "contracts/ERC20Factory.sol:ERC20Factory",
            "label": "ticker",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1312,
            "contract": "contracts/ERC20Factory.sol:ERC20Factory",
            "label": "totalSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1314,
            "contract": "contracts/ERC20Factory.sol:ERC20Factory",
            "label": "mintable",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 1316,
            "contract": "contracts/ERC20Factory.sol:ERC20Factory",
            "label": "burnable",
            "offset": 1,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 1318,
            "contract": "contracts/ERC20Factory.sol:ERC20Factory",
            "label": "tokenAddress",
            "offset": 2,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 1320,
            "contract": "contracts/ERC20Factory.sol:ERC20Factory",
            "label": "creator",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}